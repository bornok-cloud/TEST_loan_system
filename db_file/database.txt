CREATE DATABASE loan_management;
USE loan_management;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL
);

CREATE TABLE loans (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    amount DECIMAL(10, 2) NOT NULL,
    interest_rate DECIMAL(5, 2) NOT NULL,
    term INT NOT NULL,
    start_date DATE NOT NULL,
    status ENUM('active', 'closed') DEFAULT 'active',
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    loan_id INT,
    payment_date DATE NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (loan_id) REFERENCES loans(id)
);

ALTER TABLE loans ADD COLUMN borrower_name VARCHAR(255) NOT NULL;

ALTER TABLE loans MODIFY COLUMN status ENUM('pending', 'approved', 'rejected') DEFAULT 'pending';

SELECT id, user_id, amount, status FROM loans;

UPDATE loans SET status = 'pending' WHERE status NOT IN ('approved', 'rejected', 'pending');


-- Alter the 'usertype' column to ENUM('user', 'admin')
ALTER TABLE users
MODIFY COLUMN usertype ENUM('user', 'admin') DEFAULT 'user';






<_______UPDATED DATABASE________>





CREATE DATABASE loan_management;

USE loan_management;

CREATE TABLE `loan_applications` (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    address TEXT NOT NULL,
    loan_amount DECIMAL(10, 2) NOT NULL,
    income DECIMAL(10, 2) NOT NULL,
    loan_duration INT NOT NULL, -- duration in months
    employment_status ENUM('employed', 'self-employed', 'unemployed', 'retired') NOT NULL,
    interest_rate DECIMAL(5, 2) NOT NULL,
    status ENUM('pending', 'approved', 'rejected') NOT NULL DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    loan_type VARCHAR(50) NOT NULL,
    min_loan_amount INT NOT NULL,
    max_loan_amount INT NOT NULL
);

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    usertype ENUM('user', 'admin') DEFAULT 'user'
);

CREATE TABLE admins (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    usertype ENUM('user', 'admin') DEFAULT 'admin'
);

DELIMITER $$

CREATE TRIGGER after_user_insert
AFTER INSERT ON users
FOR EACH ROW
BEGIN
    IF NEW.usertype = 'admin' THEN
        INSERT INTO admins (id, username, password, email, usertype)
        VALUES (NEW.id, NEW.username, NEW.password, NEW.email, NEW.usertype);
    END IF;
END $$

DELIMITER ;









<______________________________________ LOAN DATABASE STRUCTURE ______________________________________>

unilolo769@gmail.com
app password: wxvx wgvl nctu esti



CREATE DATABASE loan_system;

USE loan_system;

CREATE TABLE users (
    full_name VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    verify_token VARCHAR(255) NOT NULL,
    is_verified TINYINT(1) DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
